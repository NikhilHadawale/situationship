name: Terraform and Docker Setup

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Install Google Cloud SDK
      run: |
        curl https://sdk.cloud.google.com | bash -s -- --disable-prompts
        # Write the service account key JSON content to a file
        echo "${{ secrets.GCP_KEY_FILE }}" | base64 -d > $HOME/gcp-key.json
        # Debugging: Print contents to ensure key is correct (optional, remove after verification)
        cat $HOME/gcp-key.json
        # Authenticate using the service account key
        gcloud auth activate-service-account --key-file=$HOME/gcp-key.json

    - name: Wait for instance to be ready
      run: sleep 30  # Adjust this based on instance startup time
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan
      
    - name: Terraform Apply
      run: terraform apply -auto-approve
    
    - name: Get the external IP of the instance
      id: get_ip
      run: |
        INSTANCE_IP=$(terraform output -raw instance_external_ip)
        echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV

    - name: Install Docker on the instance
      run: |
        # Debugging: Verbose SSH output to troubleshoot connection issues
        ssh -v -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} nikhil@${{ env.INSTANCE_IP }} <<EOF
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl enable docker
          sudo systemctl start docker
        EOF

    - name: Run DeepSeek Model and WebUI via Docker
      run: |
        # Run both containers via Docker
        ssh -v -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} nikhil@${{ env.INSTANCE_IP }} <<EOF
          docker run -d -p 8080:8080 --name deepseek-webui openwebui/ollama-webui
          docker run -d --name deepseek-model deepseek-model:latest
        EOF

    - name: Confirm WebUI is Running
      run: |
        # Check if WebUI is accessible by hitting localhost:8080
        ssh -v -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} nikhil@${{ env.INSTANCE_IP }} <<EOF
          curl http://localhost:8080
        EOF

    - name: List Docker Containers (Optional Debugging)
      run: |
        # Debugging: List the running Docker containers
        ssh -v -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} nikhil@${{ env.INSTANCE_IP }} <<EOF
          docker ps
        EOF